"""
Django settings for biblioteca project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# Define o diretório base do projeto. Esse caminho é construído a partir do arquivo atual
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

#Chave secreta usada para criptografia interna no Django. Ela deve ser mantida em segredo em ambientes de produção.
SECRET_KEY = 'django-insecure-42m_##wny1$+h)+139u2qg_)c-fq!2%%uny2rptx#&d5461yfq'

# SECURITY WARNING: don't run with debug turned on in production!

#Se True, ativa o modo de desenvolvimento, exibindo mensagens de erro detalhadas. Deve ser False em produção.
DEBUG = True

#Lista de hosts que o projeto Django pode servir. É importante configurar corretamente em produção.
ALLOWED_HOSTS = []


# Application definition

# ista de apps instalados no projeto. Inclui tanto os apps padrão do Django

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'emprestimo',
    'gerencialivro',
    'usuarios',
    'gerenciarCliente',
]

#Lista de middlewares que são executados em cada requisição/resposta.

#Eles incluem funcionalidades como segurança, sessões, autenticação, e proteção contra CSRF.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#Define o arquivo que contém as configurações de rotas do projeto
ROOT_URLCONF = 'biblioteca.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'biblioteca.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

#Define o arquivo que contém as configurações de rotas do projeto
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files

import os
#Define o URL de acesso aos arquivos estáticos (CSS, JavaScript, imagens).
STATIC_URL = 'static/'

# Diretório para coletar arquivos estáticos
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # Ajuste o caminho conforme necessário
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

#Define o tipo de campo chave primária padrão
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py

LOGIN_REDIRECT_URL = 'listar_usuarios'

LOGIN_URL = 'login'
LOGOUT_REDIRECT_URL = 'login'  # Redirecionar para a página de login após logout

DEBUG = True  # Certifique-se de que isso está definido como True

#Define o modelo customizado de usuário
AUTH_USER_MODEL = 'usuarios.Usuario'

AUTHENTICATION_BACKENDS = [
    'usuarios.auth_backends.EmailBackend',  # Nosso backend customizado
    'django.contrib.auth.backends.ModelBackend',  # Backend padrão
]